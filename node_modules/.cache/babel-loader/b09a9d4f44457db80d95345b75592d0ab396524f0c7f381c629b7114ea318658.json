{"ast":null,"code":"var _jsxFileName = \"/Users/magdalenazyglewicz/Documents/SheCodes/SheCodes React/React-Week-5/src/Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport WeatherForecast from \"./WeatherForecast\";\nimport axios from \"axios\";\nimport \"./Weather.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Weather(props) {\n  _s();\n  const [weatherData, setWeatherData] = useState({\n    ready: false\n  });\n  const [city, setCity] = useState(props.defaultCity);\n  useEffect(() => {\n    search();\n  }, [city]);\n  function handleResponse(response) {\n    setWeatherData({\n      ready: true,\n      coordinates: response.data.coord,\n      temperature: response.data.main.temp,\n      humidity: response.data.main.humidity,\n      date: new Date(response.data.dt * 1000),\n      description: response.data.weather[0].description,\n      icon: response.data.weather[0].icon,\n      wind: response.data.wind.speed,\n      city: response.data.name\n    });\n  }\n  function handleSubmit(event) {\n    event.preventDefault(); // Verhindert das Neuladen der Seite\n    search();\n  }\n  function handleCityChange(event) {\n    setCity(event.target.value); // Aktualisiere den Zustand der Stadt\n  }\n  function search() {\n    const apiKey = \"97f8e93f00107773f88eafd933ce86b7\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse).catch(error => {\n      console.error(\"Error fetching weather data: \", error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Weather\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-9\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            placeholder: \"Enter a city..\",\n            className: \"form-control search-input\",\n            onChange: handleCityChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-3 p-0\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Search\",\n            className: \"btn w-100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), weatherData.ready ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(WeatherInfo, {\n        data: weatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(WeatherForecast, {\n        coordinates: weatherData.coordinates\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Weather-loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Weather, \"oaBslM4Q8oieAz665P6m/Nuo5as=\");\n_c = Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","useEffect","WeatherInfo","WeatherForecast","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Weather","props","_s","weatherData","setWeatherData","ready","city","setCity","defaultCity","search","handleResponse","response","coordinates","data","coord","temperature","main","temp","humidity","date","Date","dt","description","weather","icon","wind","speed","name","handleSubmit","event","preventDefault","handleCityChange","target","value","apiKey","apiUrl","get","then","catch","error","console","className","children","onSubmit","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/magdalenazyglewicz/Documents/SheCodes/SheCodes React/React-Week-5/src/Weather.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport WeatherForecast from \"./WeatherForecast\";\nimport axios from \"axios\";\nimport \"./Weather.css\";\n\nexport default function Weather(props) {\n  const [weatherData, setWeatherData] = useState({ ready: false });\n  const [city, setCity] = useState(props.defaultCity);\n\n  useEffect(() => {\n    search();\n  }, [city]);\n\n  function handleResponse(response) {\n    setWeatherData({\n      ready: true,\n      coordinates: response.data.coord,\n      temperature: response.data.main.temp,\n      humidity: response.data.main.humidity,\n      date: new Date(response.data.dt * 1000),\n      description: response.data.weather[0].description,\n      icon: response.data.weather[0].icon,\n      wind: response.data.wind.speed,\n      city: response.data.name,\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault(); // Verhindert das Neuladen der Seite\n    search();\n  }\n\n  function handleCityChange(event) {\n    setCity(event.target.value); // Aktualisiere den Zustand der Stadt\n  }\n\n  function search() {\n    const apiKey = \"97f8e93f00107773f88eafd933ce86b7\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n\n    axios\n      .get(apiUrl)\n      .then(handleResponse)\n      .catch((error) => {\n        console.error(\"Error fetching weather data: \", error);\n      });\n  }\n\n  return (\n    <div className=\"Weather\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"row\">\n          <div className=\"col-9\">\n            <input\n              type=\"search\"\n              placeholder=\"Enter a city..\"\n              className=\"form-control search-input\"\n              onChange={handleCityChange}\n            />\n          </div>\n          <div className=\"col-3 p-0\">\n            <input type=\"submit\" value=\"Search\" className=\"btn w-100\" />\n          </div>\n        </div>\n      </form>\n      {weatherData.ready ? (\n        <>\n          <WeatherInfo data={weatherData} />\n          <WeatherForecast coordinates={weatherData.coordinates} />\n        </>\n      ) : (\n        <div className=\"Weather-loading\">Loading...</div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}